=begin
#bLoyal.LoyaltyService

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

require 'spec_helper'
require 'json'

# Unit tests for BloyalLoyaltyClient::CartsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CartsApi' do
  before do
    # run before each test
    @instance = BloyalLoyaltyClient::CartsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CartsApi' do
    it 'should create an instance of CartsApi' do
      expect(@instance).to be_instance_of(BloyalLoyaltyClient::CartsApi)
    end
  end

  # unit tests for accrue_cart
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCalculatedCart]
  describe 'accrue_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for accrue_cart
  # @param coupon_codes 
  # @param excluded_discount_codes 
  # @param cart 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCalculatedCart]
  describe 'accrue_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_rule_exclusion_add_rule_exclusions_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponse]
  describe 'add_rule_exclusion_add_rule_exclusions_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for add_rule_exclusion_add_rule_exclusions_async
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param rules 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponse]
  describe 'add_rule_exclusion_add_rule_exclusions_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for approve_cart
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCartApproval]
  describe 'approve_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for approve_cart
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param order_processor 
  # @param bypass_compliance_checks 
  # @param cart 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCartApproval]
  describe 'approve_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for assign_cart_line_assign_cart_line_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCartLine]
  describe 'assign_cart_line_assign_cart_line_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for assign_cart_line_assign_cart_line_async
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param shipment_uid 
  # @param shipment_number 
  # @param line_uid 
  # @param line_number 
  # @param quantity 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCartLine]
  describe 'assign_cart_line_assign_cart_line_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for calculate_cart
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCalculatedCart]
  describe 'calculate_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for calculate_cart
  # @param coupon_codes 
  # @param calculate_date 
  # @param excluded_discount_codes 
  # @param order_processor 
  # @param cart 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCalculatedCart]
  describe 'calculate_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_cart_post_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'cancel_cart_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_cart_post_async
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param order_processor 
  # @param reason_uid 
  # @param reason_code 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'cancel_cart_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_coupons_apply_cart_coupon
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @option opts [String] :uid 
  # @option opts [String] :code 
  # @option opts [Integer] :quantity 
  # @return [ServerResponseCoupon]
  describe 'cart_coupons_apply_cart_coupon test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_coupons_delete_cart_coupon
  # @param access_key 
  # @param uid 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @option opts [String] :code 
  # @option opts [Integer] :quantity 
  # @return [ServerResponse]
  describe 'cart_coupons_delete_cart_coupon test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_coupons_get_cart_coupons
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseIEnumerableAppliedCoupon]
  describe 'cart_coupons_get_cart_coupons test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_customer_clear_cart_customer_by_query
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [Object]
  describe 'cart_customer_clear_cart_customer_by_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_customer_get_customer
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCustomer]
  describe 'cart_customer_get_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_customer_get_customer_by_query
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseCustomer]
  describe 'cart_customer_get_customer_by_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_customer_set_cart_customer
  # @param body 
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'cart_customer_set_cart_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_customer_set_cart_customer
  # @param external_id 
  # @param first_name2 
  # @param last_name2 
  # @param address 
  # @param address_modified 
  # @param address_validated 
  # @param company_name 
  # @param phone1 
  # @param phone2 
  # @param mobile_phone 
  # @param fax_number 
  # @param email_address 
  # @param facebook_id 
  # @param twitter_id 
  # @param mobile_device_id 
  # @param loyalty_redemption_disabled 
  # @param loyalty_accrual_disabled 
  # @param loyalty_card_number 
  # @param current_loyalty_points 
  # @param current_loyalty_currency 
  # @param edit_at_pos 
  # @param web_account 
  # @param verified 
  # @param tax_exempt 
  # @param birth_date 
  # @param loyalty_points_accounts 
  # @param loyalty_currency_accounts 
  # @param type 
  # @param price_level 
  # @param transaction_count 
  # @param total_sales 
  # @param club_memberships 
  # @param subscriber_group_memberships 
  # @param loyaltyt_program_memberships 
  # @param loyalty_program_memberships 
  # @param no_email 
  # @param no_text_messages 
  # @param salutation 
  # @param parent_customer_uid 
  # @param parent_customer_code 
  # @param parent_external_id 
  # @param referral_customer1_uid 
  # @param referral_customer1_code 
  # @param referral_customer2_uid 
  # @param referral_customer2_code 
  # @param alert_count 
  # @param created 
  # @param created_local 
  # @param signup_channel_uid 
  # @param signup_store_uid 
  # @param signup_store_code 
  # @param signup_store_external_id 
  # @param id 
  # @param uid 
  # @param code 
  # @param first_name 
  # @param last_name 
  # @param custom_fields 
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'cart_customer_set_cart_customer test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_customer_set_cart_customer_by_external_id
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseCommandResponse]
  describe 'cart_customer_set_cart_customer_by_external_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_customer_set_cart_customer_by_external_id
  # @param external_id2 
  # @param first_name2 
  # @param last_name2 
  # @param address 
  # @param address_modified 
  # @param address_validated 
  # @param company_name 
  # @param phone1 
  # @param phone2 
  # @param mobile_phone 
  # @param fax_number 
  # @param email_address 
  # @param facebook_id 
  # @param twitter_id 
  # @param mobile_device_id 
  # @param loyalty_redemption_disabled 
  # @param loyalty_accrual_disabled 
  # @param loyalty_card_number 
  # @param current_loyalty_points 
  # @param current_loyalty_currency 
  # @param edit_at_pos 
  # @param web_account 
  # @param verified 
  # @param tax_exempt 
  # @param birth_date 
  # @param loyalty_points_accounts 
  # @param loyalty_currency_accounts 
  # @param type 
  # @param price_level 
  # @param transaction_count 
  # @param total_sales 
  # @param club_memberships 
  # @param subscriber_group_memberships 
  # @param loyaltyt_program_memberships 
  # @param loyalty_program_memberships 
  # @param no_email 
  # @param no_text_messages 
  # @param salutation 
  # @param parent_customer_uid 
  # @param parent_customer_code 
  # @param parent_external_id 
  # @param referral_customer1_uid 
  # @param referral_customer1_code 
  # @param referral_customer2_uid 
  # @param referral_customer2_code 
  # @param alert_count 
  # @param created 
  # @param created_local 
  # @param signup_channel_uid 
  # @param signup_store_uid 
  # @param signup_store_code 
  # @param signup_store_external_id 
  # @param id 
  # @param uid 
  # @param code 
  # @param first_name 
  # @param last_name 
  # @param custom_fields 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseCommandResponse]
  describe 'cart_customer_set_cart_customer_by_external_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_models_get_by_query
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @option opts [BOOLEAN] :allocate_charges 
  # @return [ServerResponseCart]
  describe 'cart_models_get_by_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_models_get_cart_model_alert_async
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alert_uid 
  # @return [ServerResponseIEnumerableAlert]
  describe 'cart_models_get_cart_model_alert_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cart_models_get_cart_model_commitment_async
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseIEnumerableCartLine]
  describe 'cart_models_get_cart_model_commitment_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_acknowledge_alert_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'carts_acknowledge_alert_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_acknowledge_alert_async
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param alert_uid 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'carts_acknowledge_alert_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_accounts
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseIEnumerableCartAccount]
  describe 'carts_get_accounts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_accounts_0
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseIEnumerableCartAccount]
  describe 'carts_get_accounts_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_alert_detail_async
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :alert_uid 
  # @return [ServerResponseIEnumerableAlert]
  describe 'carts_get_alert_detail_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_alert_details_async
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @option opts [String] :alert_uid 
  # @return [ServerResponseIEnumerableAlert]
  describe 'carts_get_alert_details_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_by_query
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @option opts [BOOLEAN] :allocate_charges 
  # @return [ServerResponseCart]
  describe 'carts_get_by_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_lines
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseIEnumerableCartLine]
  describe 'carts_get_lines test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_lines_0
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseIEnumerableCartLine]
  describe 'carts_get_lines_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_rule_exclusions_async
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseIEnumerableRule]
  describe 'carts_get_rule_exclusions_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_shipments
  # @param access_key 
  # @param cart_uid 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseIEnumerableCartShipment]
  describe 'carts_get_shipments test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for carts_get_shipments_0
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :externa_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseIEnumerableCartShipment]
  describe 'carts_get_shipments_0 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for claim_cart
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseClaim]
  describe 'claim_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for claim_cart
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param channel_uid 
  # @param channel_code 
  # @param customer_uid 
  # @param customer_external_id 
  # @param customer_code 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseClaim]
  describe 'claim_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for commit_cart
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommitment]
  describe 'commit_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for commit_cart
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param order_processor 
  # @param payments 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommitment]
  describe 'commit_cart test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cart_shipment_delete_shipment
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'delete_cart_shipment_delete_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_cart_shipment_delete_shipment
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param shipment_uid 
  # @param shipment_number 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'delete_cart_shipment_delete_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_available_cart_coupons_get_available_coupons
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cart_uid 
  # @option opts [String] :external_id 
  # @option opts [String] :source_external_id 
  # @return [ServerResponseCoupon]
  describe 'get_available_cart_coupons_get_available_coupons test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for query_cart_pickup_locations_get_cart_pickup_locations_async
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :query_cart_uid 
  # @option opts [String] :query_cart_external_id 
  # @option opts [String] :query_cart_source_external_id 
  # @return [ServerResponseIEnumerableLocation]
  describe 'query_cart_pickup_locations_get_cart_pickup_locations_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_rule_exclusion_remove_rule_exclusion_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponse]
  describe 'remove_rule_exclusion_remove_rule_exclusion_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_rule_exclusion_remove_rule_exclusion_async
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param rules 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponse]
  describe 'remove_rule_exclusion_remove_rule_exclusion_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reverse_commit_cart_reverse_commit_cart_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'reverse_commit_cart_reverse_commit_cart_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reverse_commit_cart_reverse_commit_cart_async
  # @param uid 
  # @param reference_number 
  # @param command_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'reverse_commit_cart_reverse_commit_cart_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_cart_header_post_header
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'save_cart_header_post_header test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_cart_header_post_header
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param header 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'save_cart_header_post_header test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_cart_shipment_post_shipment
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'save_cart_shipment_post_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for save_cart_shipment_post_shipment
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param shipment 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'save_cart_shipment_post_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_cart_address_post_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'set_cart_address_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_cart_address_post_async
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param address 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'set_cart_address_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_shipment_address_post_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'set_shipment_address_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_shipment_address_post_async
  # @param cart_uid 
  # @param cart_external_id 
  # @param cart_source_external_id 
  # @param shipment_uid 
  # @param address 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'set_shipment_address_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for submit_cart_post_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommitment]
  describe 'submit_cart_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for submit_cart_post_async
  # @param cart 
  # @param generate_transaction 
  # @param generate_alerts 
  # @param generate_orders 
  # @param order_processor 
  # @param device_uid 
  # @param store_code 
  # @param device_code 
  # @param cashier_uid 
  # @param cashier_code 
  # @param cashier_external_id 
  # @param uid 
  # @param reference_number 
  # @param system_uid 
  # @param connector_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommitment]
  describe 'submit_cart_post_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for void_commit_cart_void_commit_cart_async
  # @param body 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'void_commit_cart_void_commit_cart_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for void_commit_cart_void_commit_cart_async
  # @param uid 
  # @param reference_number 
  # @param transaction_uid 
  # @param access_key 
  # @param [Hash] opts the optional parameters
  # @return [ServerResponseCommandResponse]
  describe 'void_commit_cart_void_commit_cart_async test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
