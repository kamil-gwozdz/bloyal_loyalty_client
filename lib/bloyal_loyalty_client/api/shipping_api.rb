=begin
#bLoyal.LoyaltyService

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

module BloyalLoyaltyClient
  class ShippingApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # @param body 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [ServerResponseIDictionaryGuidIListShippingRate]
    def calculate_cart_shipping_rates_query_shipping_rates_async(body, access_key, opts = {})
      data, _status_code, _headers = calculate_cart_shipping_rates_query_shipping_rates_async_with_http_info(body, access_key, opts)
      data
    end

    # @param body 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServerResponseIDictionaryGuidIListShippingRate, Integer, Hash)>] ServerResponseIDictionaryGuidIListShippingRate data, response status code and response headers
    def calculate_cart_shipping_rates_query_shipping_rates_async_with_http_info(body, access_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'access_key' is set
      if @api_client.config.client_side_validation && access_key.nil?
        fail ArgumentError, "Missing the required parameter 'access_key' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # resource path
      local_var_path = '/api/v4/{accessKey}/shippingrates/commands/calculatecart'.sub('{' + 'accessKey' + '}', access_key.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['Cart'] = cart
      form_params['CartUid'] = cart_uid
      form_params['CartExternalId'] = cart_external_id
      form_params['ShipmentUids'] = @api_client.build_collection_param(shipment_uids, :multi)
      form_params['OrderProcessor'] = order_processor
      form_params['DeviceUid'] = device_uid
      form_params['StoreCode'] = store_code
      form_params['DeviceCode'] = device_code
      form_params['CashierUid'] = cashier_uid
      form_params['CashierCode'] = cashier_code
      form_params['CashierExternalId'] = cashier_external_id
      form_params['Uid'] = uid
      form_params['ReferenceNumber'] = reference_number
      form_params['SystemUid'] = system_uid
      form_params['ConnectorUid'] = connector_uid

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ServerResponseIDictionaryGuidIListShippingRate' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#calculate_cart_shipping_rates_query_shipping_rates_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param cart 
    # @param cart_uid 
    # @param cart_external_id 
    # @param shipment_uids 
    # @param order_processor 
    # @param device_uid 
    # @param store_code 
    # @param device_code 
    # @param cashier_uid 
    # @param cashier_code 
    # @param cashier_external_id 
    # @param uid 
    # @param reference_number 
    # @param system_uid 
    # @param connector_uid 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [ServerResponseIDictionaryGuidIListShippingRate]
    def calculate_cart_shipping_rates_query_shipping_rates_async(cart, cart_uid, cart_external_id, shipment_uids, order_processor, device_uid, store_code, device_code, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, access_key, opts = {})
      data, _status_code, _headers = calculate_cart_shipping_rates_query_shipping_rates_async_with_http_info(cart, cart_uid, cart_external_id, shipment_uids, order_processor, device_uid, store_code, device_code, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, access_key, opts)
      data
    end

    # @param cart 
    # @param cart_uid 
    # @param cart_external_id 
    # @param shipment_uids 
    # @param order_processor 
    # @param device_uid 
    # @param store_code 
    # @param device_code 
    # @param cashier_uid 
    # @param cashier_code 
    # @param cashier_external_id 
    # @param uid 
    # @param reference_number 
    # @param system_uid 
    # @param connector_uid 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServerResponseIDictionaryGuidIListShippingRate, Integer, Hash)>] ServerResponseIDictionaryGuidIListShippingRate data, response status code and response headers
    def calculate_cart_shipping_rates_query_shipping_rates_async_with_http_info(cart, cart_uid, cart_external_id, shipment_uids, order_processor, device_uid, store_code, device_code, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, access_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async ...'
      end
      # verify the required parameter 'cart' is set
      if @api_client.config.client_side_validation && cart.nil?
        fail ArgumentError, "Missing the required parameter 'cart' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'cart_uid' is set
      if @api_client.config.client_side_validation && cart_uid.nil?
        fail ArgumentError, "Missing the required parameter 'cart_uid' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'cart_external_id' is set
      if @api_client.config.client_side_validation && cart_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'cart_external_id' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'shipment_uids' is set
      if @api_client.config.client_side_validation && shipment_uids.nil?
        fail ArgumentError, "Missing the required parameter 'shipment_uids' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'order_processor' is set
      if @api_client.config.client_side_validation && order_processor.nil?
        fail ArgumentError, "Missing the required parameter 'order_processor' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'device_uid' is set
      if @api_client.config.client_side_validation && device_uid.nil?
        fail ArgumentError, "Missing the required parameter 'device_uid' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'store_code' is set
      if @api_client.config.client_side_validation && store_code.nil?
        fail ArgumentError, "Missing the required parameter 'store_code' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'device_code' is set
      if @api_client.config.client_side_validation && device_code.nil?
        fail ArgumentError, "Missing the required parameter 'device_code' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'cashier_uid' is set
      if @api_client.config.client_side_validation && cashier_uid.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_uid' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'cashier_code' is set
      if @api_client.config.client_side_validation && cashier_code.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_code' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'cashier_external_id' is set
      if @api_client.config.client_side_validation && cashier_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_external_id' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'uid' is set
      if @api_client.config.client_side_validation && uid.nil?
        fail ArgumentError, "Missing the required parameter 'uid' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'reference_number' is set
      if @api_client.config.client_side_validation && reference_number.nil?
        fail ArgumentError, "Missing the required parameter 'reference_number' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'system_uid' is set
      if @api_client.config.client_side_validation && system_uid.nil?
        fail ArgumentError, "Missing the required parameter 'system_uid' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'connector_uid' is set
      if @api_client.config.client_side_validation && connector_uid.nil?
        fail ArgumentError, "Missing the required parameter 'connector_uid' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # verify the required parameter 'access_key' is set
      if @api_client.config.client_side_validation && access_key.nil?
        fail ArgumentError, "Missing the required parameter 'access_key' when calling ShippingApi.calculate_cart_shipping_rates_query_shipping_rates_async"
      end
      # resource path
      local_var_path = '/api/v4/{accessKey}/shippingrates/commands/calculatecart'.sub('{' + 'accessKey' + '}', access_key.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['Cart'] = cart
      form_params['CartUid'] = cart_uid
      form_params['CartExternalId'] = cart_external_id
      form_params['ShipmentUids'] = @api_client.build_collection_param(shipment_uids, :multi)
      form_params['OrderProcessor'] = order_processor
      form_params['DeviceUid'] = device_uid
      form_params['StoreCode'] = store_code
      form_params['DeviceCode'] = device_code
      form_params['CashierUid'] = cashier_uid
      form_params['CashierCode'] = cashier_code
      form_params['CashierExternalId'] = cashier_external_id
      form_params['Uid'] = uid
      form_params['ReferenceNumber'] = reference_number
      form_params['SystemUid'] = system_uid
      form_params['ConnectorUid'] = connector_uid

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ServerResponseIDictionaryGuidIListShippingRate' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#calculate_cart_shipping_rates_query_shipping_rates_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param body 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [ServerResponseIEnumerableShippingOption]
    def calculate_shipping_rates_query_shipping_options_async(body, access_key, opts = {})
      data, _status_code, _headers = calculate_shipping_rates_query_shipping_options_async_with_http_info(body, access_key, opts)
      data
    end

    # @param body 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServerResponseIEnumerableShippingOption, Integer, Hash)>] ServerResponseIEnumerableShippingOption data, response status code and response headers
    def calculate_shipping_rates_query_shipping_options_async_with_http_info(body, access_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.calculate_shipping_rates_query_shipping_options_async ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'access_key' is set
      if @api_client.config.client_side_validation && access_key.nil?
        fail ArgumentError, "Missing the required parameter 'access_key' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # resource path
      local_var_path = '/api/v4/{accessKey}/shippingoptions/commands/calculate'.sub('{' + 'accessKey' + '}', access_key.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['ChannelUid'] = channel_uid
      form_params['ChannelCode'] = channel_code
      form_params['OrderProcessor'] = order_processor
      form_params['Shipments'] = @api_client.build_collection_param(shipments, :multi)
      form_params['DeviceUid'] = device_uid
      form_params['StoreCode'] = store_code
      form_params['DeviceCode'] = device_code
      form_params['CashierUid'] = cashier_uid
      form_params['CashierCode'] = cashier_code
      form_params['CashierExternalId'] = cashier_external_id
      form_params['Uid'] = uid
      form_params['ReferenceNumber'] = reference_number
      form_params['SystemUid'] = system_uid
      form_params['ConnectorUid'] = connector_uid

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ServerResponseIEnumerableShippingOption' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#calculate_shipping_rates_query_shipping_options_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param channel_uid 
    # @param channel_code 
    # @param order_processor 
    # @param shipments 
    # @param device_uid 
    # @param store_code 
    # @param device_code 
    # @param cashier_uid 
    # @param cashier_code 
    # @param cashier_external_id 
    # @param uid 
    # @param reference_number 
    # @param system_uid 
    # @param connector_uid 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [ServerResponseIEnumerableShippingOption]
    def calculate_shipping_rates_query_shipping_options_async(channel_uid, channel_code, order_processor, shipments, device_uid, store_code, device_code, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, access_key, opts = {})
      data, _status_code, _headers = calculate_shipping_rates_query_shipping_options_async_with_http_info(channel_uid, channel_code, order_processor, shipments, device_uid, store_code, device_code, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, access_key, opts)
      data
    end

    # @param channel_uid 
    # @param channel_code 
    # @param order_processor 
    # @param shipments 
    # @param device_uid 
    # @param store_code 
    # @param device_code 
    # @param cashier_uid 
    # @param cashier_code 
    # @param cashier_external_id 
    # @param uid 
    # @param reference_number 
    # @param system_uid 
    # @param connector_uid 
    # @param access_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServerResponseIEnumerableShippingOption, Integer, Hash)>] ServerResponseIEnumerableShippingOption data, response status code and response headers
    def calculate_shipping_rates_query_shipping_options_async_with_http_info(channel_uid, channel_code, order_processor, shipments, device_uid, store_code, device_code, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, access_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ShippingApi.calculate_shipping_rates_query_shipping_options_async ...'
      end
      # verify the required parameter 'channel_uid' is set
      if @api_client.config.client_side_validation && channel_uid.nil?
        fail ArgumentError, "Missing the required parameter 'channel_uid' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'channel_code' is set
      if @api_client.config.client_side_validation && channel_code.nil?
        fail ArgumentError, "Missing the required parameter 'channel_code' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'order_processor' is set
      if @api_client.config.client_side_validation && order_processor.nil?
        fail ArgumentError, "Missing the required parameter 'order_processor' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'shipments' is set
      if @api_client.config.client_side_validation && shipments.nil?
        fail ArgumentError, "Missing the required parameter 'shipments' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'device_uid' is set
      if @api_client.config.client_side_validation && device_uid.nil?
        fail ArgumentError, "Missing the required parameter 'device_uid' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'store_code' is set
      if @api_client.config.client_side_validation && store_code.nil?
        fail ArgumentError, "Missing the required parameter 'store_code' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'device_code' is set
      if @api_client.config.client_side_validation && device_code.nil?
        fail ArgumentError, "Missing the required parameter 'device_code' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'cashier_uid' is set
      if @api_client.config.client_side_validation && cashier_uid.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_uid' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'cashier_code' is set
      if @api_client.config.client_side_validation && cashier_code.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_code' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'cashier_external_id' is set
      if @api_client.config.client_side_validation && cashier_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_external_id' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'uid' is set
      if @api_client.config.client_side_validation && uid.nil?
        fail ArgumentError, "Missing the required parameter 'uid' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'reference_number' is set
      if @api_client.config.client_side_validation && reference_number.nil?
        fail ArgumentError, "Missing the required parameter 'reference_number' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'system_uid' is set
      if @api_client.config.client_side_validation && system_uid.nil?
        fail ArgumentError, "Missing the required parameter 'system_uid' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'connector_uid' is set
      if @api_client.config.client_side_validation && connector_uid.nil?
        fail ArgumentError, "Missing the required parameter 'connector_uid' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # verify the required parameter 'access_key' is set
      if @api_client.config.client_side_validation && access_key.nil?
        fail ArgumentError, "Missing the required parameter 'access_key' when calling ShippingApi.calculate_shipping_rates_query_shipping_options_async"
      end
      # resource path
      local_var_path = '/api/v4/{accessKey}/shippingoptions/commands/calculate'.sub('{' + 'accessKey' + '}', access_key.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['ChannelUid'] = channel_uid
      form_params['ChannelCode'] = channel_code
      form_params['OrderProcessor'] = order_processor
      form_params['Shipments'] = @api_client.build_collection_param(shipments, :multi)
      form_params['DeviceUid'] = device_uid
      form_params['StoreCode'] = store_code
      form_params['DeviceCode'] = device_code
      form_params['CashierUid'] = cashier_uid
      form_params['CashierCode'] = cashier_code
      form_params['CashierExternalId'] = cashier_external_id
      form_params['Uid'] = uid
      form_params['ReferenceNumber'] = reference_number
      form_params['SystemUid'] = system_uid
      form_params['ConnectorUid'] = connector_uid

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ServerResponseIEnumerableShippingOption' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ShippingApi#calculate_shipping_rates_query_shipping_options_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
