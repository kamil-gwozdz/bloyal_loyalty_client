=begin
#bLoyal.LoyaltyService

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

module BloyalLoyaltyClient
  class DeviceScopedSnippetConfigApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # @param login_domain 
    # @param device_code 
    # @param uid 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :code 
    # @option opts [BOOLEAN] :check_legacy 
    # @return [ServerResponseWebSnippetProfile]
    def query_scoped_web_snippet_profile_get_async(login_domain, device_code, uid, opts = {})
      data, _status_code, _headers = query_scoped_web_snippet_profile_get_async_with_http_info(login_domain, device_code, uid, opts)
      data
    end

    # @param login_domain 
    # @param device_code 
    # @param uid 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :code 
    # @option opts [BOOLEAN] :check_legacy 
    # @return [Array<(ServerResponseWebSnippetProfile, Integer, Hash)>] ServerResponseWebSnippetProfile data, response status code and response headers
    def query_scoped_web_snippet_profile_get_async_with_http_info(login_domain, device_code, uid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeviceScopedSnippetConfigApi.query_scoped_web_snippet_profile_get_async ...'
      end
      # verify the required parameter 'login_domain' is set
      if @api_client.config.client_side_validation && login_domain.nil?
        fail ArgumentError, "Missing the required parameter 'login_domain' when calling DeviceScopedSnippetConfigApi.query_scoped_web_snippet_profile_get_async"
      end
      # verify the required parameter 'device_code' is set
      if @api_client.config.client_side_validation && device_code.nil?
        fail ArgumentError, "Missing the required parameter 'device_code' when calling DeviceScopedSnippetConfigApi.query_scoped_web_snippet_profile_get_async"
      end
      # verify the required parameter 'uid' is set
      if @api_client.config.client_side_validation && uid.nil?
        fail ArgumentError, "Missing the required parameter 'uid' when calling DeviceScopedSnippetConfigApi.query_scoped_web_snippet_profile_get_async"
      end
      # resource path
      local_var_path = '/api/v4/{loginDomain}/{deviceCode}/snippets/websnippetprofiles/profile/{uid}'.sub('{' + 'loginDomain' + '}', login_domain.to_s).sub('{' + 'deviceCode' + '}', device_code.to_s).sub('{' + 'uid' + '}', uid.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'code'] = opts[:'code'] if !opts[:'code'].nil?
      query_params[:'checkLegacy'] = opts[:'check_legacy'] if !opts[:'check_legacy'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ServerResponseWebSnippetProfile' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeviceScopedSnippetConfigApi#query_scoped_web_snippet_profile_get_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param login_domain 
    # @param device_code 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :type 
    # @return [ServerResponseWebSnippetProfileSummary]
    def query_scoped_web_snippet_profile_summaries_get_async(login_domain, device_code, opts = {})
      data, _status_code, _headers = query_scoped_web_snippet_profile_summaries_get_async_with_http_info(login_domain, device_code, opts)
      data
    end

    # @param login_domain 
    # @param device_code 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :type 
    # @return [Array<(ServerResponseWebSnippetProfileSummary, Integer, Hash)>] ServerResponseWebSnippetProfileSummary data, response status code and response headers
    def query_scoped_web_snippet_profile_summaries_get_async_with_http_info(login_domain, device_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeviceScopedSnippetConfigApi.query_scoped_web_snippet_profile_summaries_get_async ...'
      end
      # verify the required parameter 'login_domain' is set
      if @api_client.config.client_side_validation && login_domain.nil?
        fail ArgumentError, "Missing the required parameter 'login_domain' when calling DeviceScopedSnippetConfigApi.query_scoped_web_snippet_profile_summaries_get_async"
      end
      # verify the required parameter 'device_code' is set
      if @api_client.config.client_side_validation && device_code.nil?
        fail ArgumentError, "Missing the required parameter 'device_code' when calling DeviceScopedSnippetConfigApi.query_scoped_web_snippet_profile_summaries_get_async"
      end
      # resource path
      local_var_path = '/api/v4/{loginDomain}/{deviceCode}/snippets/websnippetprofiles/summaries'.sub('{' + 'loginDomain' + '}', login_domain.to_s).sub('{' + 'deviceCode' + '}', device_code.to_s)

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'type'] = opts[:'type'] if !opts[:'type'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'ServerResponseWebSnippetProfileSummary' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeviceScopedSnippetConfigApi#query_scoped_web_snippet_profile_summaries_get_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
