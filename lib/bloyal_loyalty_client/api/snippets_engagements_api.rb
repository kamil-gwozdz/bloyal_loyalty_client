=begin
#bLoyal.LoyaltyService

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.29
=end

module BloyalLoyaltyClient
  class SnippetsEngagementsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # @param body 
    # @param login_domain 
    # @param device_code 
    # @param [Hash] opts the optional parameters
    # @return [ServerResponseEngagementTransaction]
    def record_engagement_token_scoped_get_async(body, login_domain, device_code, opts = {})
      data, _status_code, _headers = record_engagement_token_scoped_get_async_with_http_info(body, login_domain, device_code, opts)
      data
    end

    # @param body 
    # @param login_domain 
    # @param device_code 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServerResponseEngagementTransaction, Integer, Hash)>] ServerResponseEngagementTransaction data, response status code and response headers
    def record_engagement_token_scoped_get_async_with_http_info(body, login_domain, device_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SnippetsEngagementsApi.record_engagement_token_scoped_get_async ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'login_domain' is set
      if @api_client.config.client_side_validation && login_domain.nil?
        fail ArgumentError, "Missing the required parameter 'login_domain' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'device_code' is set
      if @api_client.config.client_side_validation && device_code.nil?
        fail ArgumentError, "Missing the required parameter 'device_code' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # resource path
      local_var_path = '/api/v4/{loginDomain}/{deviceCode}/snippets/engagements/commands/recordtoken'.sub('{' + 'loginDomain' + '}', login_domain.to_s).sub('{' + 'deviceCode' + '}', device_code.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['EngagementToken'] = engagement_token
      form_params['Quantity'] = quantity
      form_params['Message'] = message
      form_params['DeviceUid'] = device_uid
      form_params['StoreCode'] = store_code
      form_params['DeviceCode'] = device_code
      form_params['CashierUid'] = cashier_uid
      form_params['CashierCode'] = cashier_code
      form_params['CashierExternalId'] = cashier_external_id
      form_params['Uid'] = uid
      form_params['ReferenceNumber'] = reference_number
      form_params['SystemUid'] = system_uid
      form_params['ConnectorUid'] = connector_uid

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ServerResponseEngagementTransaction' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SnippetsEngagementsApi#record_engagement_token_scoped_get_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # @param engagement_token 
    # @param quantity 
    # @param message 
    # @param device_uid 
    # @param store_code 
    # @param device_code2 
    # @param cashier_uid 
    # @param cashier_code 
    # @param cashier_external_id 
    # @param uid 
    # @param reference_number 
    # @param system_uid 
    # @param connector_uid 
    # @param login_domain 
    # @param device_code 
    # @param [Hash] opts the optional parameters
    # @return [ServerResponseEngagementTransaction]
    def record_engagement_token_scoped_get_async(engagement_token, quantity, message, device_uid, store_code, device_code2, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, login_domain, device_code, opts = {})
      data, _status_code, _headers = record_engagement_token_scoped_get_async_with_http_info(engagement_token, quantity, message, device_uid, store_code, device_code2, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, login_domain, device_code, opts)
      data
    end

    # @param engagement_token 
    # @param quantity 
    # @param message 
    # @param device_uid 
    # @param store_code 
    # @param device_code2 
    # @param cashier_uid 
    # @param cashier_code 
    # @param cashier_external_id 
    # @param uid 
    # @param reference_number 
    # @param system_uid 
    # @param connector_uid 
    # @param login_domain 
    # @param device_code 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ServerResponseEngagementTransaction, Integer, Hash)>] ServerResponseEngagementTransaction data, response status code and response headers
    def record_engagement_token_scoped_get_async_with_http_info(engagement_token, quantity, message, device_uid, store_code, device_code2, cashier_uid, cashier_code, cashier_external_id, uid, reference_number, system_uid, connector_uid, login_domain, device_code, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: SnippetsEngagementsApi.record_engagement_token_scoped_get_async ...'
      end
      # verify the required parameter 'engagement_token' is set
      if @api_client.config.client_side_validation && engagement_token.nil?
        fail ArgumentError, "Missing the required parameter 'engagement_token' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'quantity' is set
      if @api_client.config.client_side_validation && quantity.nil?
        fail ArgumentError, "Missing the required parameter 'quantity' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'message' is set
      if @api_client.config.client_side_validation && message.nil?
        fail ArgumentError, "Missing the required parameter 'message' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'device_uid' is set
      if @api_client.config.client_side_validation && device_uid.nil?
        fail ArgumentError, "Missing the required parameter 'device_uid' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'store_code' is set
      if @api_client.config.client_side_validation && store_code.nil?
        fail ArgumentError, "Missing the required parameter 'store_code' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'device_code2' is set
      if @api_client.config.client_side_validation && device_code2.nil?
        fail ArgumentError, "Missing the required parameter 'device_code2' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'cashier_uid' is set
      if @api_client.config.client_side_validation && cashier_uid.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_uid' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'cashier_code' is set
      if @api_client.config.client_side_validation && cashier_code.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_code' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'cashier_external_id' is set
      if @api_client.config.client_side_validation && cashier_external_id.nil?
        fail ArgumentError, "Missing the required parameter 'cashier_external_id' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'uid' is set
      if @api_client.config.client_side_validation && uid.nil?
        fail ArgumentError, "Missing the required parameter 'uid' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'reference_number' is set
      if @api_client.config.client_side_validation && reference_number.nil?
        fail ArgumentError, "Missing the required parameter 'reference_number' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'system_uid' is set
      if @api_client.config.client_side_validation && system_uid.nil?
        fail ArgumentError, "Missing the required parameter 'system_uid' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'connector_uid' is set
      if @api_client.config.client_side_validation && connector_uid.nil?
        fail ArgumentError, "Missing the required parameter 'connector_uid' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'login_domain' is set
      if @api_client.config.client_side_validation && login_domain.nil?
        fail ArgumentError, "Missing the required parameter 'login_domain' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # verify the required parameter 'device_code' is set
      if @api_client.config.client_side_validation && device_code.nil?
        fail ArgumentError, "Missing the required parameter 'device_code' when calling SnippetsEngagementsApi.record_engagement_token_scoped_get_async"
      end
      # resource path
      local_var_path = '/api/v4/{loginDomain}/{deviceCode}/snippets/engagements/commands/recordtoken'.sub('{' + 'loginDomain' + '}', login_domain.to_s).sub('{' + 'deviceCode' + '}', device_code.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['EngagementToken'] = engagement_token
      form_params['Quantity'] = quantity
      form_params['Message'] = message
      form_params['DeviceUid'] = device_uid
      form_params['StoreCode'] = store_code
      form_params['DeviceCode'] = device_code
      form_params['CashierUid'] = cashier_uid
      form_params['CashierCode'] = cashier_code
      form_params['CashierExternalId'] = cashier_external_id
      form_params['Uid'] = uid
      form_params['ReferenceNumber'] = reference_number
      form_params['SystemUid'] = system_uid
      form_params['ConnectorUid'] = connector_uid

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ServerResponseEngagementTransaction' 

      auth_names = opts[:auth_names] || []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: SnippetsEngagementsApi#record_engagement_token_scoped_get_async\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
